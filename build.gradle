apply plugin: 'java'
apply plugin: 'war'

sourceCompatibility = 1.6
version = "1." + getDate()

dependencies {
	compile fileTree(dir: 'web/WEB-INF/lib', includes: ['*.jar'])
	runtime fileTree(dir: 'web/WEB-INF/lib', includes: ['*.jar'])
}

jar {
	def manifestClasspath = configurations.runtime.collect { 'lib/'+it.getName() }.join(' ')
    manifest {
        attributes(
        	'Implementation-Title': 'Aprohirdetes.com', 
        	'Implementation-Version': version, 
        	'Main-Class': 'com.aprohirdetes.server.AproComponent',
        	'Class-Path': manifestClasspath
        )
    }
    
    from {
    	configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

war {
	from 'web'
	from('src/main/java/com/aprohirdetes/server/templates') {
		include '*.html' into('WEB-INF/classes/com/aprohirdetes/server/templates')
	}
	archiveName 'aprocom-server.war'
	manifest {
        attributes(
        	'Implementation-Title': 'Aprohirdetes.com', 
        	'Implementation-Version': version, 
        )
    }
}

def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMddHHmmss')
    return formattedDate
}

afterEvaluate {
	configure(allProcessResourcesTasks()) {
		filter(ReplaceTokens, tokens: [version: project.version, gradleVersion: project.gradle.gradleVersion])
	}
}

def allProcessResourcesTasks() {
	sourceSets.all.processResourcesTaskName.collect {
		tasks[it]
	}
}